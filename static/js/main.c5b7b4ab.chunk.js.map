{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","style","color","FeedbackOptions","options","onLeaveFeedback","className","styles","container","map","option","onClick","Section","children","title","App","state","handleFeedback","setState","Object","values","this","reduce","acc","feedBack","countTotalFeedback","toFixed","keys","countPositiveFeedbackPercentage","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0OAEeA,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC+B3BC,EA5BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,4CACCJ,GAAQC,GAAWC,EAClB,+BACE,qBAAIG,MAAO,CAAEC,MAAO,SAApB,mBAAsCN,KACtC,qBAAIK,MAAO,CAAEC,MAAO,UAApB,sBAA0CL,KAC1C,qBAAII,MAAO,CAAEC,MAAO,OAApB,kBAAmCJ,KACnC,yCAAYC,KACZ,oDAEGC,EAFH,WAMF,cAAC,EAAD,CAAcN,QAAQ,0B,gBCCbS,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,wBAAqBC,QAAS,kBAAMN,EAAgBK,IAApD,SACGA,GADUA,SCANE,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACd,qCACE,6BAAKA,IACJD,MCGCE,E,4MAGJC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,eAAiB,SAACP,GAChB,EAAKQ,SAAL,eAAiBR,EAAS,EAAKM,MAAMN,GAAU,K,wDAGjD,WAIE,OAHmBS,OAAOC,OAAOC,KAAKL,OAAOM,QAC3C,SAACC,EAAKC,GAAN,OAAmBD,EAAMC,O,6CAI7B,WAKE,OAJqBH,KAAKL,MAAMpB,KACVyB,KAAKI,qBAEgC,KAAKC,QAAQ,K,oBAG1E,WACE,MAA+BL,KAAKL,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAAC,EAAD,CAASgB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEV,QAASe,OAAOQ,KAAKN,KAAKL,OAC1BX,gBAAiBgB,KAAKJ,iBAExB,cAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,KAAKI,qBACZzB,mBAAoBqB,KAAKO,2C,GAxCjBC,aAAZd,EACGe,aAAe,GA8CTf,QC/CfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,sC","file":"static/js/main.c5b7b4ab.chunk.js","sourcesContent":["const Notification = ({ message }) => <b>{message}</b>;\r\n\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <h2>Statistics</h2>\r\n    {good || neutral || bad ? (\r\n      <ul>\r\n        <li style={{ color: \"green\" }}>good: {good}</li>\r\n        <li style={{ color: \"orange\" }}>neutral: {neutral}</li>\r\n        <li style={{ color: \"red\" }}>bad: {bad}</li>\r\n        <li>total: {total}</li>\r\n        <li>\r\n          positive feedback:\r\n          {positivePercentage} %\r\n        </li>\r\n      </ul>\r\n    ) : (\r\n      <Notification message=\"No feedback given\" />\r\n    )}\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      {options.map((option) => (\r\n        <button key={option} onClick={() => onLeaveFeedback(option)}>\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","const Section = ({ children, title }) => (\r\n  <>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </>\r\n);\r\nexport default Section;\r\n","import { Component } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\n\nimport Section from \"./components/Section\";\n\nclass App extends Component {\n  static defaultProps = {};\n  static propTypes = {};\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = (option) => {\n    this.setState({ [option]: this.state[option] + 1 });\n  };\n\n  countTotalFeedback() {\n    const totalCount = Object.values(this.state).reduce(\n      (acc, feedBack) => acc + feedBack\n    );\n    return totalCount;\n  }\n  countPositiveFeedbackPercentage() {\n    const goodFeedback = this.state.good;\n    const totalFeedback = this.countTotalFeedback();\n\n    const positiveFeedback = ((goodFeedback / totalFeedback) * 100).toFixed(2);\n    return positiveFeedback;\n  }\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.handleFeedback}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__3Q605\"};"],"sourceRoot":""}